# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19r_W8QgSYgjQ_zwNfBcXraKnwk4nbxT4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from mlxtend.plotting import plot_decision_regions

dataset =pd.read_csv(r"/content/IRIS.csv")
dataset

dataset.isnull().sum()

dataset.shape

dataset.notnull()

sns.scatterplot(data=dataset)
plt.show()

x = dataset.iloc[:,:-1]
y = dataset["Species"]

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
sc.fit(x)
x =pd.DataFrame(sc.transform(x),columns=x.columns)

x

from sklearn.model_selection import train_test_split

x_train , x_test , y_train , y_test = train_test_split(x,y,random_state=52,test_size=0.2)

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(x_train,y_train)

knn.score(x_test,y_test)*100

knn.score(x_train,y_train)*100

knn.predict([[1.628164 ,1.038005 ,-0.124958 ,0.819624 ,1.447956]])

y_pred = knn.predict(x_test)

from sklearn.metrics import classification_report,confusion_matrix
 print("Report:\n",classification_report(y_test,y_pred))
 confusion_matrix(y_test, y_pred)
 print(f"Confusion Matrix:\n{confusion_matrix(y_test, y_pred)}")

sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, cmap="Blues")
plt.show()

